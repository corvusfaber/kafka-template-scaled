{
    "sourceFile": ".github/workflows/ci-cd.yaml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1755605622987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1755605622987,
            "name": "Commit-0",
            "content": "name: CI-CD-node-app\n\n#trigger\non:\n  push:\n    branches:\n      - mf-set-topic\n    \n#jobs\njobs:\n  # build-and-push:\n  #   runs-on: ubuntu-latest\n  #   steps:\n  #     - name: Log into docker Hub\n  #       uses: docker/login-action@v3\n  #       with: \n  #         username: ${{ secrets.DOCKER_USERNAME }}\n  #         password: ${{ secrets.DOCKER_PASSWORD }}\n  #     - name: Build and push\n  #       uses: docker/build-push-action@v6\n  #       with:\n  #         push: true\n  #         tags: malcolmcfraser/testdome-nodeapp:latest\n  apply-manifest:\n    runs-on: ubuntu-latest\n    #needs: build-and-push\n    steps:\n      - name: Checkout code.\n        uses: actions/checkout@v3\n\n      - name: Set up Minikube\n        run: |\n          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\n          sudo mv minikube-linux-amd64 /usr/local/bin/minikube\n          sudo chmod +x /usr/local/bin/minikube\n          minikube start --driver=docker\n\n      - name: Setup up kubectl\n        uses: azure/setup-kubectl@v3\n        with: \n          version: 'latest'\n      \n      - name: Configure kubeconfig\n        run: |\n          echo \"${{ secrets.KUBECONFIG_CONTENT }}\" > kubeconfig\n          export KUBECONFIG=$(pwd)/kubeconfig\n\n      - name: Verify kubectl connection\n        run: kubectl get nodes\n\n      - name: Create Kafka namespace\n        run: kubectl create namespace kafka || true\n\n      - name: Apply KEDA CRDs\n        run: |\n          kubectl apply --server-side -f https://github.com/kedacore/keda/releases/download/v2.14.1/keda-2.14.1-core.yaml\n\n      - name: Wait for KEDA CRDs\n        run: |\n          for crd in scaledobjects.keda.sh triggerauthentications.keda.sh clustertriggerauthentications.keda.sh scaledjobs.keda.sh; do\n            until kubectl get crd $crd; do\n              echo \"Waiting for CRD $crd...\"\n              sleep 5\n            done\n          done\n\n      - name: Apply Kubernetes manifest\n        run: helm upgrade --install kafka-template ./kafka-template-scaled -n kafka --skip-crds\n     \n      - name: Verify Kafka statefulset\n        run: kubectl rollout status statefulset/kafka -n kafka\n\n      - name: Verify Kafka consumer deployment\n        run: kubectl rollout status deployment/kafka-consumer -n kafka\n\n      - name: Verify Kafka producer deployment\n        run: kubectl rollout status deployment/kafka-producer -n kafka\n\n      - name: Verify Kafka service\n        run: kubectl get svc kafka-svc -n kafka\n\n      - name: Start minikube service kafka-svc\n        run: minikube service kafka-svc --namespace kafka --url\n\n      - name: Create test-topic on broker\n        run: |\n             kubectl exec kafka-0 -n kafka -- /bin/bash -c \"kafka-topics.sh --create --topic test-topic --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1\"\n\n      - name: Send message to Kafka topic from producer\n        run: |\n             kubectl exec $(kubectl get pod -n kafka -l app=kafka-producer -o jsonpath='{.items[0].metadata.name}') -n kafka -- /bin/bash -c \"echo 'Hello, Kafka!' | kafka-console-producer.sh --topic test-topic --bootstrap-server kafka-svc.kafka:9092\"\n\n      - name: Consume message from Kafka topic\n        run: |\n             kubectl exec $(kubectl get pods -n kafka -l app=kafka-consumer -o jsonpath='{.items[0].metadata.name}') -n kafka -- /bin/bash -c \"kafka-console-consumer.sh --topic test-topic --bootstrap-server kafka-svc.kafka:9092 --from-beginning  --max-messages 1\"\n"
        }
    ]
}